/dts-v1/;
/plugin/;

/ {
    compatible = "ti,beaglebone-black";

    /* identification */
    part-number = "BB-SERVITRON-SIX";
    version = "00A0";
    dtbo = "cape-servitron-00A0.dtbo";

    /* state the resources this cape uses or prepare to get winged! */
    exclusive-use =
        /* Quadrature inputs */
        "P8.7", "P8.8", "P8.9",
        "P8.10", "P8.18", "P8.30",
        "P8.34", "P8.36", "P8.37",
        "P8.38", "P8.39", "P8.40",
        "P8.41", "P8.42", "P8.43",
        "P8.44", "P8.45", "P8.46",
        /* Motor enable (PWM) pins */
        "P9.22",
        "P9.21",
        "P9.14",
        "P9.16",
        "P8.19",
        "P8.13",
        /* Enable and direction pins */
        "P8.35", // M_EN (active low)

        /* Brake */
        "P8.33",
        /* Estop/power */
        /* Endstops */
        /* Hardware IP cores in use */
        "pruss"; 

    fragment@0 {
        target = <&am33xx_pinmux>;
        __overlay__ {
            motor_pwm_pins: pinmux_motor_pwm_pins{
                pinctrl-single,pins = <
                    0x150 0x3 // P9.22 - pwm0a - spi0_sclk
                    0x154 0x3 // P9.21 - pwm0b - spi0_d0
                    0x048 0x6 // P9.14 - pwm1a - gpmc_a2
                    0x04c 0x6 // P9.16 - pwm1b - gpmc_a3
                    0x020 0x4 // P8.19 - pwm2a - gpmc_ad8
                    0x024 0x4 // P8.13 - pwm2b - gpmc_ad9
                >;
            };
            brake_pins: pinmux_brake_pins{
                pinctrl-single,pins = <
                    // Mode is 0x0f: input off, pullup off
                    0x0d4 0xf // P8.33 - BRAKE - lcd_data13     GPIO0_9
                >;
            };
            motor_pins: pinmux_motor_pins{
                pinctrl-single,pins = <
                    // Mode is 0x0f: input off, pullup off
                    0x0d0 0xf // P8.35 - M_EN - lcd_data12      GPIO0_8
                    // M0
                    0x15c 0xf // P9.17 - M0_A  - spi0_cs0       GPIO0_5
                    0x040 0xf // P9.15 - M0_B  - gpmc_a0        GPIO1_16
                    0x158 0xf // P9.18 - M0_EN - spi0_d1        GPIO0_4
                    // M1
                    0x074 0xf // P9.13 - M1_A  - gpmc_wpn       GPIO0_31
                    0x070 0xf // P9.11 - M1_B  - gpmc_wait0     GPIO0_30
                    0x078 0xf // P9.12 - M1_EN - gpmc_ben1      GPIO1_28
                    // M2
                    0x180 0xf // P9.26 - M2_A  - uart1_rxd      GPIO0_14
                    0x184 0xf // P9.24 - M2_B  - uart1_txd      GPIO0_15
                    0x198 0xf // P9.30 - M2_EN - mcasp0_axr0    GPIO3_16
                    // M3
                    0x1a4 0xf // P9.27 - M3_A  - mcasp0_fsr     GPIO3_19
                    0x044 0xf // P9.23 - M3_B  - gpmc_a1        GPIO1_17
                    0x194 0xf // P9.29 - M3_EN - mcasp0_fsx     GPIO3_15
                    // M4
                    0x038 0xf // P8.16 - M4_A  - gpmc_ad14      GPIO1_14
                    0x028 0xf // P8.14 - M4_B  - gpmc_ad10      GPIO0_26
                    0x030 0xf // P8.12 - M4_EN - gpmc_ad12      GPIO1_12
                    // M5
                    0x034 0xf // P8.11 - M5_A  - gpmc_ad13      GPIO1_13
                    0x03c 0xf // P8.15 - M5_B  - gpmc_ad15      GPIO1_15
                    0x02c 0xf // P8.17 - M5_EN - gpmc_ad11      GPIO0_27
                >;
            };
            pruicss_quad_pins: pinmux_pruicss_quad_pins{
                pinctrl-single,pins = <
                    // Mode is 0x3f: input turned on, pullup off
                    0x090 0x3f // P8.7  - Q0A - gpmc_advn_ale   GPIO2_2
                    0x094 0x3f // P8.8  - Q0B - gpmc_oen_ren    GPIO2_3
                    0x09c 0x3f // P8.9  - Q0I - gpmc_ben0_cle   GPIO2_5

                    0x098 0x3f // P8.10 - Q1A - gpmc_wen        GPIO2_4
                    0x08c 0x3f // P8.18 - Q1B - gpmc_clk        GPIO2_1
                    0x0ec 0x3f // P8.30 - Q1I - lcd_ac_bias_en  GPIO2_25

                    0x0cc 0x3f // P8.34 - Q2A - lcd_data_11     GPIO2_17
                    0x0c8 0x3f // P8.36 - Q2B - lcd_data_10     GPIO2_16
                    0x0c0 0x3f // P8.37 - Q2I - lcd_data_8      GPIO2_14

                    0x0c4 0x3f // P8.38 - Q3A - lcd_data_9      GPIO2_15
                    0x0b8 0x3f // P8.39 - Q3B - lcd_data_6      GPIO2_12
                    0x0bc 0x3f // P8.40 - Q3I - lcd_data_7      GPIO2_13

                    0x0b0 0x3f // P8.41 - Q4A - lcd_data_4      GPIO2_10
                    0x0b4 0x3f // P8.42 - Q4B - lcd_data_5      GPIO2_11
                    0x0a8 0x3f // P8.43 - Q4I - lcd_data_2      GPIO2_8

                    0x0ac 0x3f // P8.44 - Q5A - lcd_data_3      GPIO2_9
                    0x0a0 0x3f // P8.45 - Q5B - lcd_data_0      GPIO2_6
                    0x0a4 0x3f // P8.46 - Q5I - lcd_data_1      GPIO2_7
                >;
            };

        };
    };

    fragment@1{
        target = <&pruss>;
        __overlay__{
            status = "okay";
            pinctrl-names = "default";
            pinctrl-0       = <&pruicss_quad_pins>;

            quad_0{
                pin-names     = "Servi:q0_a", "Servi:q0_b", "Servi:q0_i";
                gpios         = <&gpio3 2 0x5
                                &gpio3 3 0x5
                                &gpio3 5 0x5>; 
            };            

            quad_1{
                pin-names     = "Servi:q1_a", "Servi:q1_b", "Servi:q1_i";
                gpios         = <&gpio3 4 0x5
                                &gpio3 1 0x5
                                &gpio3 25 0x5>; 
            };            

            quad_2{
                pin-names     = "Servi:q2_a", "Servi:q2_b", "Servi:q2_i";
                gpios         = <&gpio3 17 0x5
                                &gpio3 16 0x5
                                &gpio3 14 0x5>; 
            };            

            quad_3{
                pin-names     = "Servi:q3_a", "Servi:q3_b", "Servi:q3_i";
                gpios         = <&gpio3 15 0x5
                                &gpio3 12 0x5
                                &gpio3 13 0x5>; 
            };            

            quad_4{
                pin-names     = "Servi:q4_a", "Servi:q4_b", "Servi:q4_i";
                gpios         = <&gpio3 10 0x5
                                &gpio3 11 0x5
                                &gpio3 8 0x5>; 
            };            

            quad_5{
                pin-names     = "Servi:q5_a", "Servi:q5_b", "Servi:q5_i";
                gpios         = <&gpio3 9 0x5
                                &gpio3 6 0x5
                                &gpio3 7 0x5>; 
            };            
        };
    };

    // Bring up the PWM subsystem and PWM module for all three PWM generators    
    fragment@2 {
        target = <&epwmss0>;
        __overlay__ { status = "okay"; };
    };
    fragment@3 {
        target = <&ehrpwm0>;
        __overlay__ { status = "okay"; };
    };
    fragment@4 {
        target = <&epwmss1>;
        __overlay__ { status = "okay"; };
    };
    fragment@5 {
        target = <&ehrpwm1>;
        __overlay__ { status = "okay"; };
    };
    fragment@6 {
        target = <&epwmss2>;
        __overlay__ { status = "okay"; };
    };
    fragment@7 {
        target = <&ehrpwm2>;
        __overlay__ { status = "okay"; };
    };
    
    // Brake pin
    fragment@8 {
        target = <&ocp>;
        __overlay__ {
            motors {
                compatible = "gpio-leds";
                pinctrl-names = "default";
                pinctrl-0 = <&motor_pins>;
                m_en {
                    label = "servitron:m_en";
                    gpios = <&gpio1 8 0>;
                    default-state = "on"; // active low
                };
                m0_a { label = "servitron:m0_a"; gpios = <&gpio1 5 0>; default-state = "off"; };
                m0_b { label = "servitron:m0_b"; gpios = <&gpio2 16 0>; default-state = "off"; };
                m0_en { label = "servitron:m0_en"; gpios = <&gpio1 4 0>; default-state = "off"; };

                m1_a { label = "servitron:m1_a"; gpios = <&gpio1 31 0>; default-state = "off"; };
                m1_b { label = "servitron:m1_b"; gpios = <&gpio1 30 0>; default-state = "off"; };
                m1_en { label = "servitron:m1_en"; gpios = <&gpio2 28 0>; default-state = "off"; };

                m2_a { label = "servitron:m2_a"; gpios = <&gpio1 14 0>; default-state = "off"; };
                m2_b { label = "servitron:m2_b"; gpios = <&gpio1 15 0>; default-state = "off"; };
                m2_en { label = "servitron:m2_en"; gpios = <&gpio4 16 0>; default-state = "off"; };

                m3_a { label = "servitron:m3_a"; gpios = <&gpio4 19 0>; default-state = "off"; };
                m3_b { label = "servitron:m3_b"; gpios = <&gpio2 17 0>; default-state = "off"; };
                m3_en { label = "servitron:m3_en"; gpios = <&gpio4 15 0>; default-state = "off"; };

                m4_a { label = "servitron:m4_a"; gpios = <&gpio2 14 0>; default-state = "off"; };
                m4_b { label = "servitron:m4_b"; gpios = <&gpio1 26 0>; default-state = "off"; };
                m4_en { label = "servitron:m4_en"; gpios = <&gpio2 12 0>; default-state = "off"; };

                m5_a { label = "servitron:m5_a"; gpios = <&gpio2 13 0>; default-state = "off"; };
                m5_b { label = "servitron:m5_b"; gpios = <&gpio2 15 0>; default-state = "off"; };
                m5_en { label = "servitron:m5_en"; gpios = <&gpio1 27 0>; default-state = "off"; };
            };

            brake {
                compatible = "gpio-leds";
                pinctrl-names = "default";
                pinctrl-0 = <&brake_pins>;
                brake {
                    label = "servitron:brake";
                    gpios = <&gpio1 9 0>;
                    default-state = "on";
                };
            };
        };
    };
};
